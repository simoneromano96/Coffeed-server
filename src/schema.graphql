schema {
  query: Query
  mutation: Mutation
}

scalar DateTimeUtc @juniper(with_time_zone: false)

# enum UserType {
#   Admin
#   Customer
# }

type BaseResponse {
  error: Boolean!
  statusCode: Int!
  timestamp: DateTimeUtc!
  message: String!
}

type Coffee {
  id: ID! @juniper(ownership: "owned")
  name: String!
  price: Float!
  imageUrl: String!
  description: String
}

type User {
  id: ID! @juniper(ownership: "owned")
  username: String!
  email: String!
  password: String!
  userType: String! # TODO: Use enum
}

input CoffeeInput {
  name: String!
  price: Float!
  imageUrl: String!
  description: String
}

input UpdateCoffeeInput {
  id: ID!
  name: String
  price: Float
  imageUrl: String
  description: String
}

input UserInput {
  username: String!
  email: String!
  password: String!
}

type Query {
  coffees: [Coffee!]! @juniper(ownership: "owned")
  coffee(id: ID!): Coffee! @juniper(ownership: "owned")
}

type Mutation {
  #createCoffee(name: String!, price: Float!, description: String): Coffee! @juniper(ownership: "owned")
  createCoffee(data: CoffeeInput!): BaseResponse! @juniper(ownership: "owned")
  updateCoffee(data: UpdateCoffeeInput!): BaseResponse!
    @juniper(ownership: "owned")
  deleteCoffee(id: ID!): BaseResponse! @juniper(ownership: "owned")
}
